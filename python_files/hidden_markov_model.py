# -*- coding: utf-8 -*-
"""Hidden_Markov_Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fyQg1oud-Ls5hfH4jJAx-K1scy84JAOJ

##Hidden Markov Models (HMM)

"The Hidden Markov Model is a finite set of states, each of which is associated with a (generally multidimensional) probability distribution []. Transitions among the states are governed by a set of probabilities called transition probabilities." (http://jedlik.phy.bme.hu/~gerjanos/HMM/node4.html)

A hidden markov model works with probabilities to predict future events or states.

## Weather foracast Dataset 
 
For regressionand Clasification, we use multiple features but for HMM we are only interested in probability distributions that have to do with states. 

We can find these probabilities from large datasets or may already have these values.

**States:** In each markov model we have a finite set of states. These states could be something like "warm" and "cold" or "high" and "low" or even "red", "green" and "blue". These states are "hidden" within the model, which we do not direcly observe them.

**Observations:** Each state has a particular outcome or observation associated with it based on a probability distribution. An example of this is the following: *On a hot day 'Priyanka' has a 80% chance of being happy and a 20% chance of being sad.*

**Transitions:** Each state will have a probability defining the likelyhood of transitioning to a different state. An example is the following: *a cold day has a 30% chance of being followed by a hot day and a 70% chance of being follwed by another cold day.*

To create a hidden markov model we need.
- States
- Observation Distribution
- Transition Distribution

For our purpose we will assume we already have this information available as we attempt to predict the weather on a given day.

## Import and Setup
"""

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 2.x

#!pip install tensorflow_probability==0.8.0rc0 --user --upgrade

import tensorflow as tf
import tensorflow_probability as tfp

"""## Weather Model
 
Model a simple weather system and try to predict the temperature on each day given the following information.
1. Cold days are encoded by a 0 and hot days are encoded by a 1.
2. The first day in our sequence has an 30% chance of being cold.
3. A cold day has a 50% chance of being followed by a hot day.
4. A hot day has a 40% chance of being followed by a cold day.
5. On each day the temperature is
 normally distributed with Mean and standard deviation (SD.  on a 
- on Cold day: Mean and SD are 0 and 5
- on Hot day: Mean and SD are 15 and 10

 **standard deviation** can be put simply as the range of expected values. 

On a hot day the average temperature is 5 and ranges from 5 to 25.

"""

# let's work with tensorflow probobility distribution (tfd)

tfd = tfp.distributions

## define all the 3 steps to create HMM: state (initial), transition, observation
# dist --> distribution 
initial_dist = tfd.Categorical(probs=[0.3, 0.7]) # as per the above point 2: 80% chance of being cold
transition_dist = tfd.Categorical(probs= [[0.5, 0.5], [0.4, 0.6]]) # point 3 and point 4
observation_dist = tfd.Normal(loc=[0.,15.], scale=[5., 10.])# point 5, loc --> represent Mean of cold and hot day, scale --> represents SD of cold and hot day

"""## Creating Hidden Markov Model"""

hmm_model = tfd.HiddenMarkovModel(initial_distribution=initial_dist, transition_distribution=transition_dist, observation_distribution=observation_dist, num_steps=7)

# num_steps: number of days that we would like to predict information for
# num_steps = 7 --> for entire week, I want to predict

#  Goal: predict average(mean) temprature on each day 

mean = hmm_model.mean() # will calculate the probability from Model 

'''
mean --> it is partially defined value in Tensorflow, need to evaluate part of the graph from within a session to see the value of this tensor
'''

with tf.compat.v1.Session() as sess:  
  print(mean.numpy())

# output: [10.5        8.55       8.3550005  8.335501   8.333551   8.333356    8.333338 ]
# as we started from cold day, the first day average temp is 10.5 degree

